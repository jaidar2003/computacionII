
INSTRUCCIONES DE INICIO
=====================

‚ö†Ô∏è IMPORTANTE: Para que el sistema funcione correctamente, es necesario ejecutar TRES componentes:
1. El servidor principal (gestiona archivos y conexiones)
2. La API Flask (interfaz para el frontend)
3. El worker de Celery (procesa verificaciones en segundo plano)

Si no se ejecuta el worker de Celery, las verificaciones de archivos no funcionar√°n correctamente.

MacOS
=====

# 1. Iniciar el servidor de archivos (en una terminal)
python /Users/juanmaaidar/PycharmProjects/computacionII/final/servidorArchivos/main.py -m server

# 2. Iniciar la API Flask (en otra terminal)
python /Users/juanmaaidar/PycharmProjects/computacionII/final/servidorArchivos/main.py -m api -H 192.168.100.191 -p 5005

# 3. Iniciar el worker de Celery (en otra terminal) - OBLIGATORIO para verificaciones
cd /Users/juanmaaidar/PycharmProjects/computacionII/final/servidorArchivos
celery -A tareas.celery worker --loglevel=info

# 4. Iniciar el frontend (en otra terminal)
cd /Users/juanmaaidar/PycharmProjects/computacionII/final/servidorArchivos/front
# Editar el archivo .env para configurar VITE_API_URL si la API est√° en otra m√°quina
npm run dev

Linux
=====

# 1. Iniciar el servidor de archivos (en una terminal)
python /home/juanma/PycharmProjects/computacionII/final/servidorArchivos/main.py -m server

# 2. Iniciar la API Flask (en otra terminal)
python /home/juanma/PycharmProjects/computacionII/final/servidorArchivos/main.py -m api -H 192.168.100.191 -p 5005

# 3. Iniciar el worker de Celery (en otra terminal) - OBLIGATORIO para verificaciones
cd /home/juanma/PycharmProjects/computacionII/final/servidorArchivos
celery -A tareas.celery worker --loglevel=info

# 4. Iniciar el frontend (en otra terminal)
cd /home/juanma/PycharmProjects/computacionII/final/servidorArchivos/front
# Editar el archivo .env para configurar VITE_API_URL si la API est√° en otra m√°quina
npm run dev

USANDO EL CLI INTEGRADO - ¬°NUEVA FUNCIONALIDAD! üéâ
================================================

‚ö†Ô∏è IMPORTANTE: Antes de usar el CLI, aseg√∫rate de que el servidor est√© en ejecuci√≥n.
A diferencia del frontend, el CLI se comunica directamente con el servidor mediante sockets SSL,
sin utilizar la API Flask como intermediario.

Paso 1: Instalar dependencias
----------------------------
# Instala las dependencias necesarias para el CLI
pip install colorama tqdm

Paso 2: **NUEVA FORMA RECOMENDADA** - Usando main.py directamente
----------------------------------------------------------------
# Desde la carpeta servidorArchivos (M√âTODO PRINCIPAL)
cd /Users/juanmaaidar/PycharmProjects/computacionII/final/servidorArchivos
python main.py -m cli

# ¬°Esto ahora lanza autom√°ticamente el men√∫ numerado!

Paso 3: Opciones del CLI integrado
---------------------------------
Actualmente solo est√° soportado el men√∫ interactivo:
python main.py -m cli

Paso 4: Nota
-----------
Se eliminaron los m√©todos alternativos y wrappers. Usa √∫nicamente:
python main.py -m cli

Paso 5: Configuraci√≥n del CLI
-----------------------------
# El CLI ahora detecta autom√°ticamente las variables SERVER_HOST/SERVER_PORT del archivo .env
# Si necesitas cambiar la configuraci√≥n, edita el archivo:
nano /Users/juanmaaidar/PycharmProjects/computacionII/final/servidorArchivos/.env

# O especifica el host y puerto directamente:
python main.py -m cli -H 192.168.100.191 -p 1608

MEN√öS DISPONIBLES EN EL CLI
==========================

Men√∫ principal (sin sesi√≥n iniciada):
------------------------------------
1. Iniciar sesi√≥n
2. Registrarse
3. Salir

Men√∫ principal (con sesi√≥n iniciada):
-----------------------------------
4. Listar archivos
5. Subir archivo
6. Descargar archivo
7. Eliminar archivo
8. Renombrar archivo
9. Verificar archivo
10. Cerrar sesi√≥n

Opciones adicionales para administradores:
-----------------------------------------
11. Listar usuarios
12. Ver solicitudes de permisos
13. Aprobar/rechazar solicitud

Opciones adicionales para usuarios normales:
-------------------------------------------
11. Solicitar permisos de administrador
12. Ver mis solicitudes de permisos

CAMBIOS IMPORTANTES EN ESTA ACTUALIZACI√ìN
========================================

‚úÖ **CLI Integrado**: Ahora se ejecuta directamente desde main.py con `-m cli`
‚úÖ **Men√∫ por defecto**: `python main.py -m cli` lanza autom√°ticamente el men√∫ numerado
‚úÖ **Configuraci√≥n autom√°tica**: Detecta autom√°ticamente SERVER_HOST/SERVER_PORT del .env
‚úÖ **Sin advertencias**: Ya no ver√°s advertencias sobre variables faltantes
‚úÖ **CLI simplificado**: Solo men√∫ interactivo disponible con `python main.py -m cli`
‚úÖ **Ubicaci√≥n actualizada**: CLI movido a servidorArchivos/cli/ para mejor organizaci√≥n

MODOS AVANZADOS DEL CLI
=======================
Este proyecto ahora solo soporta el men√∫ interactivo:
python main.py -m cli

RECOMENDACI√ìN DE USO
===================

Para la experiencia m√°s simple y directa:

```bash
cd /Users/juanmaaidar/PycharmProjects/computacionII/final/servidorArchivos
python main.py -m cli
```

¬°Eso es todo! El men√∫ numerado aparecer√° autom√°ticamente y podr√°s navegar de forma intuitiva.

# Para m√°s informaci√≥n, consulta la documentaci√≥n completa en:
# /Users/juanmaaidar/PycharmProjects/computacionII/final/servidorArchivos/INSTRUCCIONES_MENU_CLI_ACTUALIZADO.md




celery -A tareas.celery worker --loglevel=info

